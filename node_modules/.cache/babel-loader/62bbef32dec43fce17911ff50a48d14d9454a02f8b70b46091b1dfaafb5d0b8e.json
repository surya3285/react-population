{"ast":null,"code":"import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nconst slice = createSlice({\n  name: \"state1\",\n  initialState: {\n    counter: 0,\n    student: {\n      id: \"1001\",\n      name: \"surya\"\n    },\n    isLogin: false,\n    userName: \"\"\n  },\n  reducers: {\n    increment(state, action) {\n      let data = {\n        counter: state.counter + 1,\n        student: state.student\n      };\n      return data;\n    },\n    decrement(state, action) {\n      let data = {\n        counter: state.counter - 1,\n        student: state.student\n      };\n      return data;\n    },\n    incrementBy(state, action) {\n      let data = {\n        counter: state.counter + action.payload,\n        student: state.student\n      };\n      return data;\n    },\n    studentData(state, action) {\n      let data = {\n        counter: state.counter,\n        student: state.student\n      };\n      return data;\n    }\n  }\n});\nexport const actions = slice.actions;\nconst store = configureStore({\n  reducer: slice.reducer\n});\nexport default store;","map":{"version":3,"names":["configureStore","createSlice","slice","name","initialState","counter","student","id","isLogin","userName","reducers","increment","state","action","data","decrement","incrementBy","payload","studentData","actions","store","reducer"],"sources":["/Users/suryababum/Desktop/Reskilling/React/react-trainining/enzyme-testing/reduxtool/src/store/index.js"],"sourcesContent":["import { configureStore, createSlice } from \"@reduxjs/toolkit\";\n\nconst slice = createSlice({\n  name: \"state1\",\n  initialState: {\n    counter: 0,\n    student: { id: \"1001\", name: \"surya\" },\n    isLogin: false,\n    userName: \"\",\n  },\n  reducers: {\n    increment(state, action) {\n      let data = { counter: state.counter + 1, student: state.student };\n      return data;\n    },\n    decrement(state, action) {\n      let data = { counter: state.counter - 1, student: state.student };\n      return data;\n    },\n    incrementBy(state, action) {\n      let data = {\n        counter: state.counter + action.payload,\n        student: state.student,\n      };\n      return data;\n    },\n    studentData(state, action) {\n      let data = {\n        counter: state.counter,\n        student: state.student,\n      };\n      return data;\n    },\n  },\n});\n\nexport const actions = slice.actions;\n\nconst store = configureStore({ reducer: slice.reducer });\n\nexport default store;\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,WAAW,QAAQ,kBAAkB;AAE9D,MAAMC,KAAK,GAAGD,WAAW,CAAC;EACxBE,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAE;IACZC,OAAO,EAAE,CAAC;IACVC,OAAO,EAAE;MAAEC,EAAE,EAAE,MAAM;MAAEJ,IAAI,EAAE;IAAQ,CAAC;IACtCK,OAAO,EAAE,KAAK;IACdC,QAAQ,EAAE;EACZ,CAAC;EACDC,QAAQ,EAAE;IACRC,SAASA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACvB,IAAIC,IAAI,GAAG;QAAET,OAAO,EAAEO,KAAK,CAACP,OAAO,GAAG,CAAC;QAAEC,OAAO,EAAEM,KAAK,CAACN;MAAQ,CAAC;MACjE,OAAOQ,IAAI;IACb,CAAC;IACDC,SAASA,CAACH,KAAK,EAAEC,MAAM,EAAE;MACvB,IAAIC,IAAI,GAAG;QAAET,OAAO,EAAEO,KAAK,CAACP,OAAO,GAAG,CAAC;QAAEC,OAAO,EAAEM,KAAK,CAACN;MAAQ,CAAC;MACjE,OAAOQ,IAAI;IACb,CAAC;IACDE,WAAWA,CAACJ,KAAK,EAAEC,MAAM,EAAE;MACzB,IAAIC,IAAI,GAAG;QACTT,OAAO,EAAEO,KAAK,CAACP,OAAO,GAAGQ,MAAM,CAACI,OAAO;QACvCX,OAAO,EAAEM,KAAK,CAACN;MACjB,CAAC;MACD,OAAOQ,IAAI;IACb,CAAC;IACDI,WAAWA,CAACN,KAAK,EAAEC,MAAM,EAAE;MACzB,IAAIC,IAAI,GAAG;QACTT,OAAO,EAAEO,KAAK,CAACP,OAAO;QACtBC,OAAO,EAAEM,KAAK,CAACN;MACjB,CAAC;MACD,OAAOQ,IAAI;IACb;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMK,OAAO,GAAGjB,KAAK,CAACiB,OAAO;AAEpC,MAAMC,KAAK,GAAGpB,cAAc,CAAC;EAAEqB,OAAO,EAAEnB,KAAK,CAACmB;AAAQ,CAAC,CAAC;AAExD,eAAeD,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}