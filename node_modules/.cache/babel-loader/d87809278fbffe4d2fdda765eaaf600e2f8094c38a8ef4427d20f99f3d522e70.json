{"ast":null,"code":"import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nconst slice = createSlice({\n  name: \"state1\",\n  initialState: {\n    counter: 0,\n    student: {\n      id: \"1001\",\n      name: \"surya\"\n    },\n    isLogin: false,\n    user: {\n      userName: \"\",\n      password: \"\"\n    }\n  },\n  products: [{\n    productId: \"\",\n    productName: \"\",\n    productCost: \"\",\n    quantity: \"\"\n  }],\n  reducers: {\n    increment(state, action) {\n      let data = {\n        counter: state.counter + 1,\n        student: state.student\n      };\n      return data;\n    },\n    decrement(state, action) {\n      let data = {\n        counter: state.counter - 1,\n        student: state.student\n      };\n      return data;\n    },\n    incrementBy(state, action) {\n      let data = {\n        counter: state.counter + action.payload,\n        student: state.student\n      };\n      return data;\n    },\n    studentData(state, action) {\n      let data = {\n        counter: state.counter,\n        student: state.student\n      };\n      return data;\n    },\n    changeLoginStatus(state, action) {\n      let data = {\n        counter: state.counter,\n        student: state.student,\n        isLogin: action.payload,\n        user: state.user\n      };\n      return data;\n    },\n    changeUser(state, action) {\n      let data = {\n        counter: state.counter,\n        student: state.student,\n        isLogin: state.isLogin,\n        user: action.payload,\n        product: state.product\n      };\n      return data;\n    },\n    addProducts(state, action) {\n      let data = {\n        counter: state.counter,\n        student: state.student,\n        isLogin: state.isLogin,\n        user: state.user,\n        product: action.payload\n      };\n      return data;\n    }\n  }\n});\nexport const actions = slice.actions;\nconst store = configureStore({\n  reducer: slice.reducer\n});\nexport default store;","map":{"version":3,"names":["configureStore","createSlice","slice","name","initialState","counter","student","id","isLogin","user","userName","password","products","productId","productName","productCost","quantity","reducers","increment","state","action","data","decrement","incrementBy","payload","studentData","changeLoginStatus","changeUser","product","addProducts","actions","store","reducer"],"sources":["/Users/suryababum/Desktop/Reskilling/React/react-trainining/enzyme-testing/reduxtool/src/store/index.js"],"sourcesContent":["import { configureStore, createSlice } from \"@reduxjs/toolkit\";\n\nconst slice = createSlice({\n  name: \"state1\",\n  initialState: {\n    counter: 0,\n    student: { id: \"1001\", name: \"surya\" },\n    isLogin: false,\n    user: {\n      userName: \"\",\n      password: \"\",\n    },\n  },\n  products: [{ productId: \"\", productName: \"\", productCost: \"\", quantity: \"\" }],\n  reducers: {\n    increment(state, action) {\n      let data = { counter: state.counter + 1, student: state.student };\n      return data;\n    },\n    decrement(state, action) {\n      let data = { counter: state.counter - 1, student: state.student };\n      return data;\n    },\n    incrementBy(state, action) {\n      let data = {\n        counter: state.counter + action.payload,\n        student: state.student,\n      };\n      return data;\n    },\n    studentData(state, action) {\n      let data = {\n        counter: state.counter,\n        student: state.student,\n      };\n      return data;\n    },\n\n    changeLoginStatus(state, action) {\n      let data = {\n        counter: state.counter,\n        student: state.student,\n        isLogin: action.payload,\n        user: state.user,\n      };\n      return data;\n    },\n    changeUser(state, action) {\n      let data = {\n        counter: state.counter,\n        student: state.student,\n        isLogin: state.isLogin,\n        user: action.payload,\n        product: state.product,\n      };\n      return data;\n    },\n    addProducts(state, action) {\n      let data = {\n        counter: state.counter,\n        student: state.student,\n        isLogin: state.isLogin,\n        user: state.user,\n        product: action.payload,\n      };\n      return data;\n    },\n  },\n});\n\nexport const actions = slice.actions;\n\nconst store = configureStore({ reducer: slice.reducer });\n\nexport default store;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}